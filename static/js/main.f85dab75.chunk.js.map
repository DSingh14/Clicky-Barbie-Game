{"version":3,"sources":["components/matchcard/matchcard.js","components/wrapper/wrapper.js","components/title/title.js","App.js","index.js"],"names":["MatchCard","props","react_default","a","createElement","onClick","setClicked","id","className","alt","name","src","image","Wrapper","children","Title","correctGuesses","bestScore","clickMessage","App","state","matches","_this","clickedMatch","filter","match","clicked","i","length","setState","sort","b","Math","random","_this2","this","wrapper_wrapper","title_title","map","matchcard_matchcard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"29BAYeA,SATG,SAAAC,GAAK,OAEnBC,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,KAAKC,UAAU,iBACtDN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACXN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCF9BC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWP,EAAMa,YCE1CC,SAFD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAASP,EAAMa,mBCIhDE,SAAiB,GACjBC,EAAY,EACZC,EAAe,oFAyHJC,6MApHbC,MAAQ,CACNC,UACAL,iBACAC,YACAC,kBAGFZ,WAAa,SAAAC,GAGX,IAAMc,EAAUC,EAAKF,MAAMC,QAGrBE,EAAeF,EAAQG,OAAO,SAAAC,GAAK,OAAIA,EAAMlB,KAAOA,IAI1D,GAAIgB,EAAa,GAAGG,QAAS,CAK3BV,EAAiB,EACjBE,EAAe,2CAEf,IAAK,IAAIS,EAAI,EAAGA,EAAIN,EAAQO,OAAQD,IAClCN,EAAQM,GAAGD,SAAU,EAGvBJ,EAAKO,SAAS,CAAEX,iBAChBI,EAAKO,SAAS,CAAEb,mBAChBM,EAAKO,SAAS,CAAER,iBAGX,GAAIL,EAAiB,GAG1BO,EAAa,GAAGG,SAAU,EAK1BR,EAAe,0DAFfF,EAIqBC,IACnBA,EAAYD,EACZM,EAAKO,SAAS,CAAEZ,eAIlBI,EAAQS,KAAK,SAAU3B,EAAG4B,GAAK,MAAO,GAAMC,KAAKC,WAGjDX,EAAKO,SAAS,CAAER,YAChBC,EAAKO,SAAS,CAAEb,mBAChBM,EAAKO,SAAS,CAAEX,qBACX,CAGLK,EAAa,GAAGG,SAAU,EAG1BV,EAAiB,EAGjBE,EAAe,uEACfD,EAAY,GACZK,EAAKO,SAAS,CAAEZ,cAEhB,IAAK,IAAIU,EAAI,EAAGA,EAAIN,EAAQO,OAAQD,IAClCN,EAAQM,GAAGD,SAAU,EAIvBL,EAAQS,KAAK,SAAU3B,EAAG4B,GAAK,MAAO,GAAMC,KAAKC,WAGjDX,EAAKO,SAAS,CAAER,YAChBC,EAAKO,SAAS,CAAEb,mBAChBM,EAAKO,SAAS,CAAEX,2FAKX,IAAAgB,EAAAC,KACP,OACEjC,EAAAC,EAAAC,cAACgC,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAD,2BAEAnC,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBACX2B,KAAKf,MAAMF,cAGdhB,EAAAC,EAAAC,cAAA,MAAII,UAAU,4BAAd,oBACoB2B,KAAKf,MAAMJ,eAC7Bd,EAAAC,EAAAC,cAAA,WAFF,eAGe+B,KAAKf,MAAMH,WAE1Bf,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACZ2B,KAAKf,MAAMC,QAAQiB,IAAI,SAAAb,GAAK,OAC3BvB,EAAAC,EAAAC,cAACmC,EAAD,CACEjC,WAAY4B,EAAK5B,WACjBC,GAAIkB,EAAMlB,GACViC,IAAKf,EAAMlB,GACXK,MAAOa,EAAMb,oBA5GX6B,aCLlBC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f85dab75.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./matchcard.css\";\n\nconst MatchCard = props => (\n\n    <div onClick={() => props.setClicked(props.id)} className=\"card col-md-3\">\n        <div className=\"img-container\">\n            <img alt={props.name} src={props.image} />\n        </div>\n    </div>\n);\n\nexport default MatchCard;","import React from \"react\";\nimport \"./wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React, { Component } from \"react\";\nimport MatchCard from \"./components/matchcard\";\nimport Wrapper from \"./components/wrapper\";\nimport Title from \"./components/title\";\nimport matches from \"./matchcards.json\";\nimport \"./App.css\";\n\nlet correctGuesses = 0;\nlet bestScore = 0;\nlet clickMessage = \"Click on a movie poster to gain points! Click on the same one twice and you lose!\";\n\nclass App extends Component {\n\n  // Setting this.state.matches to the matches json array\n  state = {\n    matches,\n    correctGuesses,\n    bestScore,\n    clickMessage\n  };\n\n  setClicked = id => {\n\n    // Make a copy of the state matches array to work with\n    const matches = this.state.matches;\n\n    // Filter for the clicked match\n    const clickedMatch = matches.filter(match => match.id === id);\n\n    // If the matched image's clicked value is already true, \n    // do the game over actions\n    if (clickedMatch[0].clicked) {\n\n      // console.log(\"Correct Guesses: \" + correctGuesses);\n      // console.log(\"Best Score: \" + bestScore);\n\n      correctGuesses = 0;\n      clickMessage = \"Bummer! You already clicked on this one.\"\n\n      for (let i = 0; i < matches.length; i++) {\n        matches[i].clicked = false;\n      }\n\n      this.setState({ clickMessage });\n      this.setState({ correctGuesses });\n      this.setState({ matches });\n\n      // Otherwise, if clicked = false, and the user hasn't finished\n    } else if (correctGuesses < 11) {\n\n      // Set its value to true\n      clickedMatch[0].clicked = true;\n\n      // increment the appropriate counter\n      correctGuesses++;\n\n      clickMessage = \"Great! You haven't click on that one yet! Keep going!\";\n\n      if (correctGuesses > bestScore) {\n        bestScore = correctGuesses;\n        this.setState({ bestScore });\n      }\n\n      // Shuffle the array to be rendered in a random order\n      matches.sort(function (a, b) { return 0.5 - Math.random() });\n\n      // Set this.state.matches equal to the new matches array\n      this.setState({ matches });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    } else {\n\n      // Set its value to true\n      clickedMatch[0].clicked = true;\n\n      // restart the guess counter\n      correctGuesses = 0;\n\n      // the user to play again\n      clickMessage = \"WOW!!! You got ALL of them!!! Now, let's see if you can do it again!\";\n      bestScore = 12;\n      this.setState({ bestScore });\n\n      for (let i = 0; i < matches.length; i++) {\n        matches[i].clicked = false;\n      }\n\n      // Shuffle the array to be rendered in a random order\n      matches.sort(function (a, b) { return 0.5 - Math.random() });\n\n      // Set this.state.matches equal to the new matches array\n      this.setState({ matches });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Barbie Game</Title>\n\n        <h3 className=\"scoreSummary\">\n          {this.state.clickMessage}\n        </h3>\n\n        <h3 className=\"scoreSummary card-header\">\n          Correct Guesses: {this.state.correctGuesses}\n          <br />\n          Best Score: {this.state.bestScore}\n        </h3>\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.matches.map(match => (\n              <MatchCard\n                setClicked={this.setClicked}\n                id={match.id}\n                key={match.id}\n                image={match.image}\n              />\n            ))}\n          </div>\n        </div>\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}